<?php
$pattern = '#\\\\#'; // шаблон поиска - \ (Обратный слеш)
/*
Обратный слеш в php является специальным символом языка, поэтому его необходимо экранировать: \\

Но таккже в регулярных выражениях обратный слеш является специальны симвом регулярных выражений,
поэтому для того чтобы в регугярном выражении получить слеш нам необходимо написать его четырежды:

$pattern = '#\\\\#'; // шаблон поиска - \ (Обратный слеш)
*/

$replacement = '@';
$subject = '\\ 111 3344 5566'; // строка - \ 111 3344 5566

/*
Обратный слеш (\) является спец. символом языка php, поэтому если в строке на выводе мы хотим получить \,
то нам необходимо его экранировать - (\\).
То есть записать дважды
*/

$res = preg_replace($pattern, $replacement, $subject);

// echo $res; // @ 111 3344 5566




/*
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
preg_match
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

функция для работы с регулярными выражениями preg_match проверяет есть ли в строке
совпадения, в соответствии с шаблоном (паттерном) поиска.
 */


$pattern ='#a+#';
$subject = 'cccc bbb aaa';
$res = preg_match($pattern, $subject);

// echo $res; // 1

/*
 В выводе получаем - (1), так как в переданной строке есть совпадение в соответствии с
 шаблоном поиска.
 */








$pattern = '#a+#';
$subject = 'bb ccc dddd';
$res = preg_match($pattern, $subject);

// echo $res;

/*
 В выводе получаем - (0), так как в переданной строке НЕТ совпадения в соответствии с
 шаблоном поиска.
 */




$pattern = '#\d{3,}#';// цифры от 3-х раз и более

// массив строк;

$arr = [
    'aaa 123 bbb', // 1
    'aaa 1234 bbb', // 1
    'aaa 12345 bbb', // 1
    'aa 12a bbb', // 0
    'aaaa 123456789 bb', // 1
    'Aa 12 bbbb' // 0
];


/*
 Будем использовать цикл foreach
 С помощью цикла foreach переберем массив ($arr) и проверим каждый элемент массива
 в соответствии с шаблоном ($pattern = '#\d{3,}#';// цифры от 3-х раз и более)
 поиска регулярного выражения.
 */

foreach ($arr as $item) {
    $result = preg_match($pattern, $item);
    echo "Исходная строка $item " . '<br>' . "Результат работы функции preg_match $result" . '<br>' . "Шаблон поиска pattern = '#\d{3,}#' -  цифры от 3-х раз и более" . '<br><br><br>';
}


/*
Исходная строка aaa 123 bbb
Результат работы функции preg_match 1
Шаблон поиска pattern = '#\d{3,}#' - цифры от 3-х раз и более


Исходная строка aaa 1234 bbb
Результат работы функции preg_match 1
Шаблон поиска pattern = '#\d{3,}#' - цифры от 3-х раз и более


Исходная строка aaa 12345 bbb
Результат работы функции preg_match 1
Шаблон поиска pattern = '#\d{3,}#' - цифры от 3-х раз и более


Исходная строка aa 12a bbb
Результат работы функции preg_match 0
Шаблон поиска pattern = '#\d{3,}#' - цифры от 3-х раз и более


Исходная строка aaaa 123456789 bb
Результат работы функции preg_match 1
Шаблон поиска pattern = '#\d{3,}#' - цифры от 3-х раз и более


Исходная строка Aa 12 bbbb
Результат работы функции preg_match 0
Шаблон поиска pattern = '#\d{3,}#' - цифры от 3-х раз и более
 */
