<?php

//
$pattern = '#\\\\#'; // шаблон поска - \ (обратный слеш)
$replacement = '@';
$subject = '\\ 111 222 332'; // строка - \ 111 222 332
$res = preg_replace($pattern, $replacement, $subject);
// echo $res; // @ 111 222 332;

// preg_match

// Проверим есть ли в строке совпадения в соответии с шаблоном поиска (патерном)
$pattern = '#a+#';
$subject = 'ccc bbb aaa';
$res = preg_match($pattern, $subject);
// echo $res; // 1 (в переданной строке есть совпадение с шаблоном поиска)

$pattern = '#a+#';
$subject = 'bb ссс dddd';
$res = preg_match($pattern, $subject);
// echo $res; // 0 (в переданной строке НЕТ совпадения с шаблоном поиска)

//_________________________________________________________________________
$pattern = '#\d{3,}#'; // цифры от 3-х и более раз
// массив строк;
$arr = [
    'aaa 123 bbb', // 1
    'aaa 12345 bbb', // 1
    'aaa 12a bbb', // 0
    'aaa 12 bbb', // 0
    'aaaaa 123456789 bbb' // 1
];
// c помощью цикла foreach перебирам массив $arr и проверяме каждый элемент
// массива в соответствии с шаблоном поиска регулярного выражения

foreach ($arr as $item) {
    $result = preg_match($pattern, $item);
    // echo "Исходная строка $item | Результат работы функции preg_match $result" . '<br>';
}
/*
Исходная строка aaa 123 bbb | Результат работы функции preg_match 1
Исходная строка aaa 12345 bbb | Результат работы функции preg_match 1
Исходная строка aaa 12a bbb | Результат работы функции preg_match 0
Исходная строка aaa 12 bbb | Результат работы функции preg_match 0
Исходная строка aaaaa 123456789 bbb | Результат работы функции preg_match 1
 */

//______________________________________________________________________________
$pattern = '#^w[a-zA-Z]{2}d$#'; // начинается на w , далее 2 буквы латинского алфивита в конце d
$arr2 = [
    'word', // 1
    '123456word', // 0
    'word 2019', // 0
    'word2019', // 0
    'wzZd', // 1
    'слово', // 0
    'qord', // 0
    'wwwd' // 1
];

// необходимо проверить с помощью функции preg_match каждую строку массива $arr2

foreach ($arr2 as $item) {
    $res = preg_match($pattern, $item);
    // echo "Строка $item, Результат:  $res" . '<br>';
}

/*
Строка word, Результат: 1
Строка 123456word, Результат: 0
Строка word 2019, Результат: 0
Строка word2019, Результат: 0
Строка wzZd, Результат: 1
Строка слово, Результат: 0
Строка qord, Результат: 0
Строка wwwd, Результат: 1
 */

// _______________________________________________________________________________
// Карманы в регулярных выражения
// карманы в регулярных выражениях пишутся в круглых скобках - ()

// site.ru site ru

$pattern = '#([a-z0-9_-]+)\.([a-z]{2,})#';
/*
    1-й карман - ([a-z0-9_-]+)
    2-й карман - ([a-z]{2,})
 */
$subject = 'wrgwgweweg site.ru aerwgdfds';
$res = preg_match($pattern, $subject, $matches);
/*
    3-й параметр $matches в функции preg_match это массив.

    массив содержит строку подходящую под шаблон поиска - $pattern = '#([a-z0-9_-]+)\.([a-z]{2,})#';
    В нашем примере это домен - site.ru

    Также массив содержит строки соответствующие карманам регулярного выражения
    1-й карман ([a-z0-9_-]+)
    В нашем примере это доменое имя - site

    2-й карман ([a-z]{2,})
    В нашем примере это доменая зона - ru
 */

// распечатаем массив $matches с помощью var_dump или print_r

// print_r($matches);

/*
[
    0 => 'site.ru', // 0-й элемент массива $matches (домен)
    1 => 'site', // 1-й элемент массива $matches - 1-й карман (доменное имя)
    2 => 'ru' // 2-й элемент массива $matches - 2-й карман (доменная зона)
]
 */
//____________________________________________________________________________
//____________________________________________________________________________
//____________________________________________________________________________
//____________________________________________________________________________
//____________________________________________________________________________
// Задача: найти домен - site.com, найти доменное имя - site, найти доменую зону - соm

$pattern = '#([\w-]+)\.([a-z]{2,})#';
$subject = 'aaaabbbccc site.com dddeeeefffffjjjjj';
$res = preg_match($pattern, $subject, $matches2);

// print_r($matches2); // Array ( [0] => site.com [1] => site [2] => com )

// echo "Домен - $matches2[0]" . '<br>';
// echo "Имя домена - $matches2[1]" . '<br>';
// echo "Доменая зона - $matches2[2]" . '<br>';
//____________________________________________________________________________
//____________________________________________________________________________
//____________________________________________________________________________
//____________________________________________________________________________
//____________________________________________________________________________

// функция preg_match_all
// функция preg_math_all позволяет узнать количество совпадений в переданной строке

$pattern = '#a+#'; // a - 1 и более раз
$subject = 'a aa aaa aaaa bb bbb bbbb';
// узнаем количество совпадений
$res = preg_match_all($pattern, $subject);
// echo $res; // 4


// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// найдем количество символов в строке
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

$pattern = '#.#'; // любой символ
$subject = 'test1 test2';
// найдем количество символов в строке (узнаем количество совпадений)
$res = preg_match_all($pattern, $subject);
// echo $res; // 11

// ___________________________________________________________________________
$pattern = '#([\w-]+)\.([a-z]{2,})#';
$subject = 'site.ru site.com site.exe';

$res = preg_match_all($pattern, $subject, $matches3);
// print_r($matches3);
/*
    [
        0 => [0 => site.ru 1 => site.com 2 => site.exe] // массив совпадений с регулярным выражением (домены)
        1 => [0 => site 1 => site 2 => site] // массив совпадений с 1-м карманом регулярного выражения (доменые имена)
        2 => [0 => ru  1 => com  2 => exe ] // массив совпадений со 2-м карманом регулярного выражения (доменые зоны)
    ]
 */

// распечатаем массив совпадений с регулярным выражением (домены)
print_r($matches3[0]); // Array ( [0] => site.ru [1] => site.com [2] => site.exe )

// распечатаем домен site.exe
echo $matches3[0][2]; // site.exe